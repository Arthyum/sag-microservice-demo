version: "3.0"

networks:
  sag-network:
    external: true

services:
  userservice:
    image: ${REGISTRY}softwareag/userservice:${TAG}-msc
    networks:
      - sag-network
    depends_on:
      - consul-server-bootstrap
    deploy:
      replicas: 1
      labels:
        traefik.port: 5555
        traefik.docker.network: "sag-network"
        traefik.protocol: "http"
        traefik.frontend.rule: "Host:userservice.docker.tests"
        traefik.backend.loadbalancer.sticky: "true"
        traefik.enable: "true"
      restart_policy:
        condition: any

  iplocator:
    image: ${REGISTRY}softwareag/iplocator:${TAG}-msc
    networks:
      - sag-network
    depends_on:
      - consul-server-bootstrap
    deploy:
      replicas: 1
      labels:
        traefik.port: 5555
        traefik.docker.network: "sag-network"
        traefik.protocol: "http"
        traefik.frontend.rule: "Host:iplocator.docker.tests"
        traefik.backend.loadbalancer.sticky: "true"
        traefik.enable: "true"
      restart_policy:
        condition: any

  userinfo:
    image: ${REGISTRY}softwareag/userinfo:${TAG}-msc
    networks:
      - sag-network
    depends_on:
      - consul-server-bootstrap
    deploy:
      replicas: 1
      labels:
        traefik.port: 5555
        traefik.docker.network: "sag-network"
        traefik.protocol: "http"
        traefik.frontend.rule: "Host:userinfo.docker.tests"
        traefik.backend.loadbalancer.sticky: "true"
        traefik.enable: "true"
      restart_policy:
        condition: any

  fibonacci:
    image: ${REGISTRY}softwareag/fibonacci:${TAG}-msc
    networks:
      - sag-network
    depends_on:
      - consul-server-bootstrap
    deploy:
      replicas: 1
      labels:
        traefik.port: 5555
        traefik.docker.network: "sag-network"
        traefik.protocol: "http"
        traefik.frontend.rule: "Host:fibonacci.docker.tests"
        traefik.backend.loadbalancer.sticky: "true"
        traefik.enable: "true"
      restart_policy:
        condition: any

  consul-server-bootstrap:
    image: consul:latest
    networks:
      - sag-network
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
    command: "agent -server -bootstrap-expect 1 -ui -client 0.0.0.0"
    deploy:
      replicas: 1
      restart_policy:
        condition: any